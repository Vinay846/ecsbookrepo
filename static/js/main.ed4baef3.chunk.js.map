{"version":3,"sources":["app/ecsSlice.js","features/components/home.js","features/components/cart.js","features/components/header.js","features/components/confirm.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["AsyncThunkgetBookInfoFromAPI","createAsyncThunk","_","thunkAPI","a","fetch","then","r","json","data","AsyncThunkSearch","query","console","log","getState","bookStore","filter","book","title","toString","indexOf","AsyncThunkSortWithRating","params","slice","sort","r1","r2","average_rating","ecsSlice","createSlice","name","initialState","searchResult","bookInCart","reducers","addDataInBookStore","state","action","payload","addInCart","includes","push","removeFromCart","extraReducers","fulfilled","actions","bookData","Home","dispatch","useDispatch","books","useSelector","useState","listedBook","setListedBook","setSearchResult","newCount","setNewCount","value","setValue","useEffect","length","loadMore","window","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","nc","addEventListener","removeEventListener","className","DropdownButton","id","onSelect","e","strValue","unwrapResult","variant","Dropdown","Item","eventKey","map","idx","emptySymbol","fullSymbol","initialRating","readonly","ratings_count","Button","disabled","some","bkId","bookID","onClick","Cart","totalAmount","setTotalAmount","history","useHistory","calPrice","forEach","eachItem","price","Table","striped","bordered","hover","item","authors","colSpan","Header","setState","cartState","setcartState","Navbar","bg","Brand","style","cursor","color","Nav","Form","inline","FormControl","type","onChange","target","placeholder","trim","aria-hidden","Confirm","Card","border","textAlign","Body","Math","floor","random","href","App","path","rootReducer","combineReducers","reducer","configureStore","Boolean","location","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed4baef3.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk  } from '@reduxjs/toolkit';\r\n\r\nexport const AsyncThunkgetBookInfoFromAPI = createAsyncThunk('bookStore/AsyncThunkgetBookInfoFromAPI', async (_, thunkAPI) => {\r\n    // console.log(thunkAPI.getState());\r\n    return fetch('https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json')\r\n    .then(r => r.json())\r\n    .then(data => {\r\n        return data;\r\n    });\r\n});\r\n\r\n\r\nexport const AsyncThunkSearch = createAsyncThunk('bookStore/AsyncThunkSearch', async (query, thunkAPI) => {\r\n    console.log(query);\r\n    return thunkAPI.getState().bookStore.bookStore.filter(book => {\r\n        return book.title.toString().indexOf(query) > -1;\r\n    })\r\n})\r\n\r\nexport const AsyncThunkSortWithRating = createAsyncThunk('bookStore/AsyncThunkSortWithRating', async (params, thunkAPI) => {\r\n    console.log(params);\r\n    if(params === '0'){\r\n        return thunkAPI.getState().bookStore.bookStore.slice().sort((r1, r2) => {\r\n            return r1.average_rating - r2.average_rating;\r\n        })\r\n    }else if(params === '6'){\r\n        return thunkAPI.getState().bookStore.bookStore.slice().sort((r1, r2) => {\r\n            return r2.average_rating - r1.average_rating;\r\n        })\r\n    }else{\r\n        return thunkAPI.getState().bookStore.bookStore.filter((book) => book.average_rating < params).sort((r1, r2) => {\r\n            return r2.average_rating - r1.average_rating;\r\n        })\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport const ecsSlice = createSlice({\r\n    name: 'bookStore',\r\n    initialState: {\r\n        searchResult: [],\r\n        bookInCart:[],\r\n        bookStore: [],\r\n    },\r\n    reducers: {\r\n        addDataInBookStore: (state, action) => {\r\n            console.log(action);\r\n            state.bookStore = action.payload;\r\n        },\r\n        addInCart: (state, action) => {\r\n            if(!state.bookInCart.includes(action.payload)){\r\n                state.bookInCart.push(action.payload);\r\n            }\r\n        },\r\n        removeFromCart: (state, action) => {\r\n            state.bookInCart = action.payload;          \r\n        }\r\n        \r\n    },\r\n    extraReducers: {\r\n        [AsyncThunkgetBookInfoFromAPI.fulfilled]: (state, action) => {\r\n            console.log(\"fulfilled \", action);\r\n            state.bookStore = action.payload;\r\n        },\r\n        [AsyncThunkSearch.fulfilled]: (state, action) => {\r\n            console.log(\"fulfilled search \", action);\r\n            state.searchResult = action.payload;\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const {addDataInBookStore, addInCart, removeFromCart} = ecsSlice.actions;\r\n\r\n\r\n\r\nexport const bookData = state => state.bookStore;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { bookData,\r\n    AsyncThunkgetBookInfoFromAPI,\r\n    AsyncThunkSortWithRating, \r\n    addInCart,\r\n } from '../../app/ecsSlice'\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport './home.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Rating from 'react-rating';\r\n\r\n\r\n\r\nconst conversion = (strValue) => {\r\n    if (strValue === 'below 1') {\r\n        return '1';\r\n    }\r\n    else if (strValue === 'below 2') {\r\n        return '2';\r\n    }\r\n    else if (strValue === 'below 3') {\r\n        return '3';\r\n    }\r\n    else if (strValue === 'below 4') {\r\n        return '4';\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    const books = useSelector(bookData);\r\n    const [listedBook, setListedBook] = useState([]);\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [newCount, setNewCount] = useState(30);\r\n    const [value, setValue] = useState('Sort by star');\r\n\r\n\r\n    const handleSelect = (e) => {\r\n        console.log(e);\r\n        setValue(e)\r\n        if (e !== 'Filter') {\r\n            dispatch(AsyncThunkSortWithRating(conversion(e))).then(unwrapResult).then(r => {\r\n                console.log(r);\r\n                setSearchResult(r);\r\n                console.log(\"Sorted \", searchResult);\r\n            });\r\n        } else {\r\n            setSearchResult([]);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchResult.length > 0) {\r\n            setListedBook(searchResult.slice(0, newCount))\r\n        } else {\r\n            if (books.bookStore.length > 0) {\r\n                setListedBook(books.bookStore.slice(0, newCount))\r\n            }\r\n        }\r\n    }, [books, newCount, searchResult])\r\n\r\n    useEffect(() => {\r\n        dispatch(AsyncThunkgetBookInfoFromAPI())\r\n\r\n    }, [dispatch])\r\n\r\n\r\n    useEffect(()=> {\r\n        setSearchResult(books.searchResult)\r\n    }, [books.searchResult ])\r\n\r\n\r\n    \r\n    const loadMore = () => {\r\n        if (window.innerHeight + document.documentElement.scrollTop === document.scrollingElement.scrollHeight) {\r\n            setNewCount(nc => nc + 20);\r\n        }\r\n    }\r\n    \r\n    const handleAddToCart=(bookInfo)=> {\r\n        dispatch(addInCart(bookInfo));\r\n        // console.log(\"itemsInCart \", books.bookInCart.length);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', loadMore);\r\n        return () => {\r\n            window.removeEventListener('scroll', loadMore);\r\n        }\r\n    })\r\n\r\n    \r\n    return (\r\n        <div className=\"my-1\">\r\n            <DropdownButton\r\n                title={value}\r\n                id=\"dropdown-menu\"\r\n                onSelect={handleSelect}\r\n                variant=\"secondary\"\r\n            >\r\n                <Dropdown.Item eventKey=\"below 1\">below 1</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"below 2\">below 2</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"below 3\">below 3</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"below 4\">below 4</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"Sort by star\">Clear</Dropdown.Item>\r\n            </DropdownButton>\r\n\r\n            <div className=\"container booklist my-2 p-2\">\r\n                {listedBook.map((book, idx) => (\r\n                    <div className=\"card my-1 mx-1 p-3\" key={idx}>\r\n                        {book.title.length < 100 ? book.title : book.title.slice(0, 50)}\r\n                        <Rating\r\n                            emptySymbol=\"fa fa-star-o\"\r\n                            fullSymbol=\"fa fa-star\"\r\n                            initialRating={book.average_rating}\r\n                            readonly=\"true\"\r\n                        />\r\n                        <div className=\"rating-count\">{book.ratings_count} Ratings</div>\r\n                        <Button disabled={books.bookInCart.some(bkId => bkId.bookID === book.bookID)} onClick={() => handleAddToCart(book)} >{books.bookInCart.some(bkId => bkId.bookID === book.bookID) ? \"Added\": \"Add cart\"}</Button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react';\r\nimport { bookData } from '../../app/ecsSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Table } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { removeFromCart } from '../../app/ecsSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nfunction Cart() {\r\n\tconst books = useSelector(bookData);\r\n\tconst [ totalAmount, setTotalAmount ] = useState(0);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tlet calPrice = 0;\r\n\t\t\tif (books.bookInCart.length > 0) {\r\n\t\t\t\tbooks.bookInCart.forEach((eachItem) => {\r\n\t\t\t\t\tcalPrice += eachItem.price;\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(calPrice);\r\n\t\t\t}\r\n\t\t\tsetTotalAmount(calPrice);\r\n\t\t},\r\n\t\t[ books.bookInCart ]\r\n\t);\r\n\r\n\tconst HandleConfirmOrder = () => {\r\n        history.push('/confirm');\r\n        dispatch(removeFromCart([]));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container my-2\">\r\n\t\t\t<Table striped bordered hover>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t<th>Title</th>\r\n\t\t\t\t\t\t<th>Authors</th>\r\n\t\t\t\t\t\t<th>Price</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{books.bookInCart.map((item, idx) => (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>{idx + 1}</td>\r\n\t\t\t\t\t\t\t<td>{item.title}</td>\r\n\t\t\t\t\t\t\t<td>{item.authors}</td>\r\n\t\t\t\t\t\t\t<td>{item.price}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td colSpan=\"3\">Total amount</td>\r\n\t\t\t\t\t\t<td>{totalAmount}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n        <div className=\"d-flex justify-content-center my-3\">\r\n\t\t\t<Button disabled={books.bookInCart.length === 0} onClick={HandleConfirmOrder}>Pay now</Button>\r\n        </div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AsyncThunkSearch, bookData } from '../../app/ecsSlice';\r\nimport { Navbar, Nav, Form, FormControl } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Header() {\r\n    const [state, setState] = useState('');\r\n    const history = useHistory();\r\n    const [cartState, setcartState] = useState();\r\n    const books = useSelector(bookData);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleSearch = () => {\r\n        if (state.trim().length > 0) {\r\n            dispatch(AsyncThunkSearch(state))\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n\r\n    const gotoCart=()=> {\r\n\t\tsetState('');\r\n        history.push('/cart/')\r\n    }\r\n\t\r\n    useEffect(()=> {\r\n        setcartState(books.bookInCart.length)\r\n    }, [books.bookInCart.length ])\r\n    \r\n    const gotoHome=()=> {\r\n\t\thistory.push('/');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Navbar bg=\"dark\" variant=\"dark\">\r\n\t\t\t<Navbar.Brand style={{cursor: \"pointer\", color: \"white\"}} onClick={gotoHome}>ECS</Navbar.Brand>\r\n\t\t\t<Nav className=\"mr-auto\" />\r\n\t\t\t<Form inline>\r\n\t\t\t\t<FormControl\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={state}\r\n\t\t\t\t\tonChange={(e) => setState(e.target.value)}\r\n\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\tclassName=\"mr-sm-2\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Button onClick={handleSearch} variant=\"outline-info\">\r\n\t\t\t\t\tSearch\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t\t<div onClick={gotoCart} className=\"cart\">\r\n\t\t\t\t<i className=\"fa fa-shopping-cart fa-2x\" aria-hidden=\"true\" />\r\n\t\t\t\t<span className=\"badge badge-warning\" id=\"lblCartCount\">\r\n\t\t\t\t\t{cartState}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</Navbar>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst randomOrderId = () => {\r\n\treturn Math.floor(Math.random() * 1000000000);\r\n};\r\n\r\nfunction Confirm() {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Card border=\"success\" style={{ textAlign: 'center' }}>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<i className=\"fa fa-check-circle\" aria-hidden=\"true\" />\r\n\t\t\t\t\t<h5>Order confirmed !</h5>\r\n\t\t\t\t\t<h6>Thankyou for Order</h6>\r\n\t\t\t\t\t<h6>OrderId: {randomOrderId()}</h6>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n            <div className=\"d-flex justify-content-center my-3\">\r\n\t\t\t<Button href=\"https://vinay846.github.io/ecsbookrepo/\">make new order ?</Button>\r\n            </div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Confirm;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport Home from './features/components/home';\r\nimport Cart from './features/components/cart';\r\nimport Header from './features/components/header';\r\nimport Confirm from './features/components/confirm';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/confirm\">\r\n\t\t\t\t\t<Confirm />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/cart\">\r\n\t\t\t\t\t<Cart />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t<Home />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport {ecsSlice} from './ecsSlice'\r\n\r\nconst rootReducer = combineReducers({\r\n  bookStore: ecsSlice.reducer,\r\n})\r\n\r\nexport default configureStore({\r\n  reducer: rootReducer\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<App />\r\n\t\t</Router>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}